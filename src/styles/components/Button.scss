.mz-button {
  position: relative;
  display: inline-block;
  white-space: nowrap;
  -webkit-appearance: none;
  cursor: pointer;
  color: $color-text-primary;
  border: none;
  border-radius: $border-radius-md;
  background-color: transparent;
  outline: none;
  text-decoration: none;
  text-transform: none;
  user-select: none;
  transition-duration: 0.3s;
  transition-property: box-shadow, transform, opacity, background-color,
    border-radius, color, border-color, background-color;
  transition-timing-function: map-get($transition, 'fast-out-slow-in');
  vertical-align: middle;
  box-sizing: border-box;

  @include foreground;

  &__content {
    position: relative;
    z-index: 50;
    padding: 0 3px;
  }

  &--dense &__content {
    padding: 0;
  }

  &--shadow:not(.mz-button--disabled) {
    @include elevation(2);
    will-change: box-shadow;
    &:active {
      @include elevation(8);
    }
  }

  &--round {
    border-radius: $border-radius-max;
    overflow: hidden;
  }

  &--disabled {
    cursor: not-allowed;
    opacity: 0.6;
    @include foreground-disabled;
    &.mz-button--default {
      background-color: $color-text-disabled;
      color: $color-text-disabled;
      border-color: $color-text-disabled;
      &:not(.mz-button--flat):not(.mz-button--outlined) {
        color: $color-white;
      }
    }
  }

  @each $type, $color in (primary, $color-primary), (success, $color-success),
    (warning, $color-warning), (danger, $color-danger),
    (default, $color-text-primary)
  {
    &--#{$type} {
      color: $color;
      @if ($type!= 'default') {
        background-color: $color;
        &:not(.mz-button--flat):not(.mz-button--outlined) {
          color: #ffffff;
        }
      }
      border-color: $color;
      &.mz-button--flat {
        border-color: transparent !important;
        background-color: transparent !important;
      }
      &.mz-button--outlined {
        background-color: transparent !important;
        border: 1px solid;
      }
    }
  }

  /* prettier-ignore */
  $size-options: (
  // size: padding, height, fontsize
    small: ( 6px, 26px, 12px ),
    medium: ( 8px, 30px, 12px ),
    default: ( 8px, 32px, 14px ),
    large: ( 10px, 36px, 14px )
  );
  @each $size, $arr in $size-options {
    &.mz-size--#{$size} {
      padding: 0 nth($arr, 1) + 1px;
      height: nth($arr, 2);
      line-height: nth($arr, 2);
      font-size: nth($arr, 3);
    }
    &--outlined.mz-size--#{$size} {
      padding: 0 nth($arr, 1);
      line-height: nth($arr, 2) - 2px;
    }
    &--icon.mz-size--#{$size} {
      padding: 0;
      width: nth($arr, 2);
    }
  }
}
